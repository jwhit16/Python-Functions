# Write a function called loading_screen that prints "This page is loading..." to the console.

def loading_screen():
  print("This page is loading...")
  

# Outside of the function body (unindented), call loading_screen().

loading_screen()


# Now, modify the function definition so that it has a parameter called number. Then delete the number = 5 assignment on the first line of the function. Pass the number 1 into your function call.

def mult_two_add_three(number):
  print(number*2 + 3)

mult_two_add_three(1)


# Call the function with the value 5 as the argument.

def mult_two_add_three(number):
  print(number*2 + 3)

mult_two_add_three(5)



# Call the function with the value -1 as the argument.

def mult_two_add_three(number):
  print(number*2 + 3)

mult_two_add_three(-1)


# Call the function with the value 0 as the argument.

def mult_two_add_three(number):
  print(number*2 + 3)

mult_two_add_three(0)


# First, change the name of the function to mult_x_add_y.

def mult_x_add_y(number):
  print(number*2 + 3)
  

# Now, add x and y as parameters of the function, after number.

def mult_x_add_y(number, x, y):
  print(number*2 + 3)
  

# Inside the function, replace 2 in the print statement with x, and replace 3 in the print statement with y.

def mult_x_add_y(number, x, y):
  print(number*x + y)
  
  
 # Call the function with these values: 5, 2, 3
 
def mult_x_add_y(number, x, y):
  print(number*x + y)
  
mult_x_add_y(5,2,3)

# Call the function with these values: 1,2,1

def mult_x_add_y(number, x, y):
  print(number*x + y)
  
mult_x_add_y(1,3,1)


# Add the parameter row_count to the function definition. Set the default value to be 1000.

def create_spreadsheet(title, row_count = 1000):
  print("Creating a spreadsheet called "+title)
  
  
# Change the print statement in the function to print “Creating a spreadsheet called title with row_count rows”, where title and row_count are replaced with their respective values.
  
def create_spreadsheet(title, row_count = 1000):
  print("Creating a spreadsheet called "+title+" with "+str(row_count)+" rows")
  

# Call create_spreadsheet() with title set to "Applications" and row_count set to 10.
  
def create_spreadsheet(title, row_count = 10):
  print("Creating a spreadsheet called "+title+" with "+str(row_count)+" rows")


create_spreadsheet("Applications")


# The function calculate_age in script.py creates a variable called age that is the difference between the current year, and a birth year, both of which are inputs of the function. Add a line to return age.

def calculate_age(current_year, birth_year):
  age = current_year - birth_year
  return age


# Outside of the function, call calculate_age with values 2049 (current_year) and 1993 (birth_year) and save the value to a variable called my_age.
  
def calculate_age(current_year, birth_year):
  age = current_year - birth_year
  return age
my_age = calculate_age(2049,1993)



# Call calculate_age with values 2049 (current_year) and 1953 (birth_year) and save the value to a variable called dads_age.

def calculate_age(current_year, birth_year):
  age = current_year - birth_year
  return age
dads_age = calculate_age(2049,1953)


# Print the string "I am X years old and my dad is Y years old" to the console, with my_age where the X is and dads_age where the Y is.

print("I am "+str(my_age)+" years old and my dad is "+str(dads_age)+ " years old")


/* Write a function called get_boundaries() that takes in two parameters, a number called target and a number called margin. */
 
def get_boundaries(target, margin):
  low_limit = target - margin
  high_limit = margin + target


/* Return both low_limit and high_limit from the function, in that order. */

def get_boundaries(target, margin):
  low_limit = target - margin
  high_limit = margin + target
  return low_limit, high_limit



current_year = 2048

def calculate_age(birth_year):
  age = current_year - birth_year
  return age
  
  
/* Define a function called repeat_stuff that takes in two inputs, stuff, and num_repeats. */

def repeat_stuff(stuff, num_repeats):
  print()
  

/* Outside of the function, call repeat_stuff. You can use the value "Row " for stuff and 3 for num_repeats. */

def repeat_stuff(stuff, num_repeats):
  print()

repeat_stuff("Row ", 3)


/* Change the print statement inside repeat_stuff to a return statement instead. */

def repeat_stuff(stuff, num_repeats):
  return(stuff*num_repeats)

repeat_stuff("Row ", 3)


/* Give the parameter num_repeats a default value of 10. */

def repeat_stuff(stuff, num_repeats=10):
  return(stuff*num_repeats)

repeat_stuff("Row ", 3)



/* Add repeat_stuff("Row ", 3) and the string "Your Boat. " together and save the result to a variable called lyrics. */

def repeat_stuff(stuff, num_repeats=10):
  return(stuff*num_repeats)

lyrics = repeat_stuff("Row ", 3) + "Your Boat. "


/* Create a variable called song and assign it the value of repeat_stuff called with the singular input lyrics. */

def repeat_stuff(stuff, num_repeats=10):
  return(stuff*num_repeats)

lyrics = repeat_stuff("Row ", 3) + "Your Boat. "
song = repeat_stuff(lyrics)


/* Print song. */

def repeat_stuff(stuff, num_repeats=10):
  return(stuff*num_repeats)

lyrics = repeat_stuff("Row ", 3) + "Your Boat. "
song = repeat_stuff(lyrics)

print(song)




